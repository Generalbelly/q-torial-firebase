version: 2
jobs:
  deploy_job:
    docker:
      - image: circleci/node:8.13.0
    steps:
      - checkout

      - restore_cache:
          name: Restore cache
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}

      - run:
          name: install dependency for the project
          command: yarn install

      - save_cache:
          name: Save cache
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      - run:
          name: move to cloud function root directory
          command: cd functions

      - restore_cache:
          name: Restore cache for cloud function
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}

      - run:
          name: install dependency for cloud functions
          command: yarn install

      - save_cache:
          name: Save cache for cloud function
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - run:
          name: move back to the project root
          command: cd ../

      - run:
          name: set env for clound functions
          command: eval "./node_modules/.bin/firebase functions:config:set $(cat config|tr "\n" " ")"

      - run:
          name: set the project
          command: ./node_modules/.bin/firebase use ${FIREBASE_PROJECT} --token ${FIREBASE_TOKEN}

      # - run:
      #     name: deploy firebase hosting
      #     command: ./node_modules/.bin/firebase deploy --only hosting --token ${FIREBASE_TOKEN}
      - run:
          name: deploy firestore:rules
          command: ./node_modules/.bin/firebase deploy --only firestore:rules --token ${FIREBASE_TOKEN}
      
      - run:
          name: deploy storage:rules
          command: ./node_modules/.bin/firebase deploy --only storage --token ${FIREBASE_TOKEN}

      - run:
          name: deploy cloud functions
          command: ./node_modules/.bin/firebase deploy --only functions --token ${FIREBASE_TOKEN}
  
workflows:
  version: 2
  deploy:
    jobs:
      - deploy_job:
          filters:
            branches:
              only: master
